version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: emotionlens-app
    restart: always
    ports:
      - "8000:8000"
    volumes:
      - ./data:/app/data
      - ./models:/app/models
      - ./mlruns:/app/mlruns
    environment:
      - PYTHONUNBUFFERED=1
    networks:
      - emotionlens-network

  prometheus:
    image: prom/prometheus:v2.42.0
    container_name: emotionlens-prometheus
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - emotionlens-network

  grafana:
    image: grafana/grafana:9.5.2
    container_name: emotionlens-grafana
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboard.json:/app/monitoring/grafana/dashboard.json:ro
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    entrypoint:
      - sh
      - -c
      - |
        cp /app/monitoring/grafana/dashboard.json /etc/grafana/provisioning/dashboards/ &&
        chmod 644 /etc/grafana/provisioning/dashboards/dashboard.json &&
        /run.sh
    networks:
      - emotionlens-network
    depends_on:
      - prometheus

volumes:
  prometheus-data:
  grafana-data:

networks:
  emotionlens-network:
    driver: bridge